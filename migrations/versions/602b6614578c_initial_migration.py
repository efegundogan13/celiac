"""Initial migration

Revision ID: 602b6614578c
Revises: 
Create Date: 2025-05-19 21:49:25.839229

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '602b6614578c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('favorite_restaurant')
    op.drop_table('blog_comment')
    op.drop_table('product')
    op.drop_table('product_comment')
    op.drop_table('blog_like')
    op.drop_table('favorite_product')
    op.drop_table('restaurant')
    op.drop_table('recipe')
    op.drop_table('comment')
    op.drop_table('blog_category')
    with op.batch_alter_table('blog', schema=None) as batch_op:
        batch_op.add_column(sa.Column('author_id', sa.Integer(), nullable=False))
        batch_op.alter_column('title',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=150),
               existing_nullable=False)
        batch_op.drop_constraint('blog_category_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['author_id'], ['id'])
        batch_op.drop_column('image_url')
        batch_op.drop_column('category_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('blog', schema=None) as batch_op:
        batch_op.add_column(sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('image_url', sa.VARCHAR(length=200), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('blog_category_id_fkey', 'blog_category', ['category_id'], ['id'])
        batch_op.alter_column('title',
               existing_type=sa.String(length=150),
               type_=sa.VARCHAR(length=200),
               existing_nullable=False)
        batch_op.drop_column('author_id')

    op.create_table('blog_category',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('blog_category_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='blog_category_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('comment',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('restaurant_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('rating', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurant.id'], name='comment_restaurant_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='comment_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='comment_pkey')
    )
    op.create_table('recipe',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('image_url', sa.VARCHAR(length=300), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='recipe_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='recipe_pkey')
    )
    op.create_table('restaurant',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('restaurant_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('address', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('city', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('category', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('image_url', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('latitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('longitude', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='restaurant_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('favorite_product',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name='favorite_product_product_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='favorite_product_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='favorite_product_pkey')
    )
    op.create_table('blog_like',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('blog_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['blog_id'], ['blog.id'], name='blog_like_blog_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='blog_like_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='blog_like_pkey')
    )
    op.create_table('product_comment',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('product_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('rating', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], name='product_comment_product_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='product_comment_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='product_comment_pkey')
    )
    op.create_table('product',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('restaurant_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('category', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('image_url', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurant.id'], name='product_restaurant_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='product_pkey')
    )
    op.create_table('blog_comment',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('blog_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['blog_id'], ['blog.id'], name='blog_comment_blog_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='blog_comment_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='blog_comment_pkey')
    )
    op.create_table('favorite_restaurant',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('restaurant_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['restaurant_id'], ['restaurant.id'], name='favorite_restaurant_restaurant_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='favorite_restaurant_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='favorite_restaurant_pkey')
    )
    # ### end Alembic commands ###
